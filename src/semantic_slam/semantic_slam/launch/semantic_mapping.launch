<launch>

<rosparam file="$(find semantic_slam)/params/semantic_cloud.yaml" command="load"/>
<node pkg="semantic_cloud" type="semantic_cloud.py" name="semantic_cloud" output="screen"/>

<rosparam file="$(find semantic_slam)/params/octomap_generator.yaml" command="load"/>
<node pkg="octomap_generator" type="octomap_generator" name="octomap_generator" output="screen"/>

<!--rviz-->
<node pkg="rviz" type="rviz" name="ss_rviz" args="-d $(find semantic_slam)/semantic_mapping_nav.rviz"/>

<!-- start octomap_server to publish an occupancy map -->
<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">

              <param name="resolution" value="0.02" />
              <param name="frame_id" type="string" value="map" />
              
              <param name="sensor_model/hit" value="0.7" />
              <param name="sensor_model/miss" value="0.4" />
              <param name="sensor_model/max_range" value="5.0" />
              
              <param name="pointcloud_min_z" value="0.03" />
              <param name="occupancy_min_z" value="0.03" />
              <!-- param name="pointcloud_max_z" value="2.2" /-->
              <param name="occupancy_max_z" value="1" />
              
              <remap from="cloud_in" to="/semantic_pcl/semantic_pcl" />                         
</node>

<!-- start depthimage_to_laserscan for use in navigation stack -->
<!-- node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">

              <param name="range_max" value="5.0" />
              
              <remap from="image" to="/camera/depth_registered/image_raw" />
              <remap from="camera_info" to="/camera/depth_registered/camera_info" />
</node-->

<include file="$(find jackal_2dnav)/launch/move_base.launch"/>

<!--include file="$(find explore_lite)/launch/explore.launch"/-->

<!-- node pkg="map_server" type="map_saver" name="map_saver" args="-f $(find semantic_slam)/maps/occupancy_map">

    <remap from="/map" to="/projected_map"/>

</node -->

</launch>
